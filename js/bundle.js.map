{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,2DAA2D;AAC3D;AACA,gDAAgD;AAChD;AACA;AACA,0CAA0C;AAC1C;AACA,UAAU,oCAAoC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE,gEAAgE;AAChE;AACA;AACA;AACA,2DAA2D;AAC3D,oEAAoE;AACpE;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,iBAAiB;AACjB;AACA,qDAAqD;AACrD;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,sEAAsE;AACtE,uFAAuF;AACvF;AACA,oDAAoD;AACpD,4DAA4D;AAC5D;AACA,+CAA+C;AAC/C;AACA,gDAAgD;AAChD,sDAAsD;AACtD,cAAc;AACd;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;;ACrH2B;AACD;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,KAAK;AACL;AACA,iDAAiD;AACjD,gDAAgD;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,YAAY;AACZ;AACA,yCAAyC;AACzC;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA,kEAAkE;AAClE,oDAAoD;AACpD;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,wDAAwD;AACxD;AACA,iFAAiF;AACjF;AACA;AACA;AACA,YAAY,4DAAQ;AACpB,wEAAwE;AACxE;AACA;AACA,oDAAoD;AACpD,aAAa;AACb;AACA,wDAAwD;AACxD,aAAa;AACb;AACA,iDAAiD;AACjD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,QAAQ,iDAAS,qDAAqD;AACtE;AACA,2DAA2D;AAC3D,oDAAoD;AACpD;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,gDAAgD;AAChD;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC3FpB,4DAA4D;AAC5D;AACA;AACA,4DAA4D;AAC5D,4DAA4D;AAC5D;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA,4DAA4D;AAC5D,4DAA4D;AAC5D,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,KAAK;AACL;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA,gFAAgF;AAChF,gFAAgF;AAChF;AACA;AACA,KAAK;AACL;AACA,4CAA4C;AAC5C;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA,iEAAe,KAAK,EAAC;AACD;AACD;;;;;;;;;;;;;;;;ACtD+B;AAClD;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA,cAAc;AACd,wFAAwF;AACxF;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,kDAAkD;AAClD,0BAA0B,iCAAiC,QAAQ;AACnE,2FAA2F;AAC3F,YAAY;AACZ,QAAQ;AACR;AACA;AACA,+CAA+C;AAC/C,4BAA4B,iCAAiC,yBAAyB;AACtF,wFAAwF;AACxF,SAAS;AACT,KAAK;AACL;AACA;AACA,iEAAe,SAAS;;;;;;;;;;;;;;;AC9DxB,0CAA0C;AAC1C,yCAAyC;AACzC;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,kCAAkC;AAClC;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,0CAA0C,IAAI,YAAY,WAAW,IAAI;AACzE;AACA;AACA,kCAAkC;AAClC;AACA;;;;;;;;;;;;;;;ACrBA,iBAAiB,oFAAoF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA,oCAAoC,cAAc,GAAG;AACrD,sCAAsC,WAAW;AACjD,UAAU;AACV,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,OAAO;AACpE;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,uCAAuC,cAAc,GAAG;AACxD,aAAa;AACb,uDAAuD;AACvD;AACA;AACA,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,oEAAoE;AACpE;AACA,+DAA+D;AAC/D;AACA;AACA,6CAA6C,WAAW,GAAG;AAC3D,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,YAAY;AACZ;AACA;AACA,8BAA8B;AAC9B,YAAY;AACZ;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;AChMrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mDAAmD;AACnD,SAAS;AACT;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,qDAAqD;AACrD;AACA;AACA,6CAA6C;AAC7C,6CAA6C;AAC7C;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACzCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;UC/DpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACoB;AACZ;AACR;AACA;AACE;AACJ;AAClC;AACA;AACA;AACA,yCAAyC,yDAAS;AAClD;AACA,QAAQ,yDAAI;AACZ,QAAQ,0DAAK;AACb,QAAQ,8DAAS;AACjB,QAAQ,0DAAK;AACb,QAAQ,0DAAK;AACb,QAAQ,2DAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,yDAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,mEAAmE;AACnE,YAAY;AACZ;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,wDAAwD;AACxD;AACA;AACA,gDAAgD;AAChD,gDAAgD;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,2DAA2D;AAC3D,2DAA2D;AAC3D,2DAA2D;AAC3D;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA,4DAA4D;AAC5D,4DAA4D;AAC5D,4DAA4D;AAC5D;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA,QAAQ;AACR;AACA,mFAAmF;AACnF,mFAAmF;AACnF;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA,sFAAsF;AACtF,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2FAA2F;AAC3F;AACA;AACA;AACA,8BAA8B,UAAU,MAAM,SAAS;AACvD,qDAAqD,WAAW;AAChE,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA,6DAA6D,WAAW;AACxE;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,iDAAiD,IAAI,YAAY,WAAW,IAAI;AAChF;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,qDAAqD;AACrD,6BAA6B,iCAAiC,QAAQ;AACtE,8FAA8F;AAC9F,eAAe;AACf,WAAW;AACX;AACA;AACA,kDAAkD;AAClD,+BAA+B,iCAAiC,yBAAyB;AACzF,2FAA2F;AAC3F,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,gDAAgD;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,YAAY;AACZ;AACA,yCAAyC;AACzC;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA,qEAAqE;AACrE,uDAAuD;AACvD;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA,uDAAuD;AACvD,gBAAgB;AAChB;AACA,2DAA2D;AAC3D,gBAAgB;AAChB;AACA,oDAAoD;AACpD,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA,2CAA2C;AAC3C;AACA,QAAQ;AACR;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,mDAAmD;AACnD;AACA,8DAA8D;AAC9D,uDAAuD;AACvD;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA,iEAAiE;AACjE;AACA,mDAAmD;AACnD;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,mCAAmC,cAAc,GAAG;AACpD,qCAAqC,WAAW;AAChD,SAAS;AACT,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,OAAO;AACnE;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,sCAAsC,cAAc,GAAG;AACvD,YAAY;AACZ,sDAAsD;AACtD;AACA;AACA,8CAA8C;AAC9C,8CAA8C;AAC9C,8CAA8C;AAC9C;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,mEAAmE;AACnE;AACA,8DAA8D;AAC9D;AACA;AACA,4CAA4C,WAAW,GAAG;AAC1D,gBAAgB;AAChB;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,WAAW;AACX;AACA;AACA,6BAA6B;AAC7B,WAAW;AACX;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,8DAA8D;AAC9D;AACA,mDAAmD;AACnD;AACA;AACA,6CAA6C;AAC7C;AACA,aAAa,oCAAoC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE,mEAAmE;AACnE;AACA;AACA;AACA,8DAA8D;AAC9D,uEAAuE;AACvE;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,oBAAoB;AACpB;AACA,wDAAwD;AACxD;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA,yEAAyE;AACzE,0FAA0F;AAC1F;AACA,uDAAuD;AACvD,+DAA+D;AAC/D;AACA,kDAAkD;AAClD;AACA,mDAAmD;AACnD,yDAAyD;AACzD,iBAAiB;AACjB;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,CAAC,G","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/munuCards.js","webpack://food/./js/modules/services/services.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n    // // // Calc\r\n\r\n    const result = document.querySelector('.calculating__result span'); // куда помещается результат\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    /// /// /// /// /// LocalStorage для запоминания значений(не обязательно)\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n\r\n            if(elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }  \r\n        });\r\n    };\r\n\r\n    initLocalSettings('#gender div' , 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    /// /// /// /// ///^^\r\n\r\n    function calcTotal() {                                  // //func расчёта калорийности\r\n        if (!sex || !height || !weight || !age || !ratio) {//если значения false то выведится '---' если тру то сработает формула\r\n            result.textContent = '---';\r\n            return;                             // // ретерн для досрочного завершения функиции\r\n        }\r\n\r\n        if (sex === 'female') {           // //  если выбран жен пол то расчёт будет по одной формуле и выведется на страницу\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {                              // // если мужской то по второй формуле\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    };\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInform(selector, activeClass) {                 // // получение статической инфы\r\n        const elements = document.querySelectorAll(selector);   // //получаем дивы в родителе (дивы указываем при вызове функ)\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e)=> {\r\n                if (e.target.getAttribute('data-ratio')) { // // если у элема на котором произ. событие есть аттрибут мы его присваиваем\r\n                    ratio = +e.target.getAttribute('data-ratio');   // //  из e.target\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n    \r\n                elements.forEach(elem => {              // // убираем класс актив у дивов которые получали\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n    \r\n                e.target.classList.add(activeClass); // // добавляем тому диву клас на котором произошло событие\r\n    \r\n                calcTotal();\r\n            });\r\n        });\r\n    };\r\n\r\n    getStaticInform('#gender div', 'calculating__choose-item_active');// 1арг родитель по id 2арг класс активности\r\n    getStaticInform('.calculating__choose_big div', 'calculating__choose-item_active');// 1арг родитель 2арг класс активности\r\n\r\n    function getDynamicInform(selector) {           // // func по работе с инпутами для получения динамич информ\r\n        const input = document.querySelector(selector);     // //получаем нужный инпут\r\n\r\n        input.addEventListener('input', ()=> { // // обработчик на инпут\r\n\r\n            if(input.value.match(/\\D/g)) {      // // проверям регЭкспом на не числа\r\n                input.style.border = '2px solid red'; // // Если в value не число подсвечиваем бордер красным\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch(input.getAttribute('id')) { // switch/Case проверяем наши єлем по id. Если совпало то присваеваем input.value\r\n                case 'height':                                                                  //то что вписал пользователь\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            \r\n            calcTotal();\r\n        });\r\n    };\r\n\r\n    getDynamicInform('#height');\r\n    getDynamicInform('#weight');\r\n    getDynamicInform('#age');\r\n}\r\n\r\nexport default calc;","import {closeModal, openModal} from './modal';\r\nimport {postData} from './services/services';\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n    // Forms\r\n\r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    const message = {               // // Сообщение для юзера\r\n        loading: 'img/spinner/spinner.svg',      // // Спиннер из папки img. Нужно просто указать путь и использовать изобр.\r\n        ssucces: 'Дякуємо! Ми вам зателефонуємо.',\r\n        failure: 'Error!'\r\n    };\r\n\r\n    forms.forEach(form => {             // //запуск функции(item это форма)\r\n        bindPostData(form);\r\n    });\r\n\r\n    // const postData = async (url, data)=> {    // func настраивает наш запрос, посылает его на сервер\r\n    //     const res = await fetch(url, {       // async await для того что бы асинхкод отработал правильно\r\n    //         method: 'POST',                 //ответ от сервера приходит асинхронно\r\n    //         headers: {\r\n    //             'Content-type': 'application/json'\r\n    //         },\r\n    //         body: data\r\n    //     });\r\n    \r\n    //     return await res.json();      // //получает ответ от сервера и трансфит его в json\r\n    // };\r\n\r\n    function bindPostData(form) {                           // // Функция по отправке данніх\r\n        form.addEventListener('submit', (e)=> {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img');  // // Cоздание єлемента на странице для помещения сообщения юзеру\r\n            statusMessage.src = message.loading;    // // Помещаем спиннер на стрнцу\r\n            statusMessage.style.cssText = `         \r\n                display: block;\r\n                margin: 0 auto;\r\n            `;                              // // центруем спиннер стилями\r\n            form.append(statusMessage);\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            const formData = new FormData(form);        // // Создание объекта formData\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries())); //превращаем formData в арр с аррами,\r\n                                                                                    // //после в obj, а после в json\r\n            // // FETCH\r\n            // // Создание запроса на сервер с помощью func postData внутри которой fetch возвращающий promise\r\n            postData('http://localhost:3001/requests', json)        // // обрабатываем ответ с помошью then и catch\r\n            .then(data => {                                             // // data - это полученные данные от сервера\r\n                console.log(data);\r\n                showThanksModal(message.ssucces);\r\n                statusMessage.remove();             // Удаление соббщения для юзера\r\n            })\r\n            .catch(()=> {\r\n                showThanksModal(message.failure);       // ввывод ошибки при срабатывании reject\r\n            })\r\n            .finally(()=> {\r\n                form.reset();                    // Сброс формы после успешной отправки данных\r\n            })\r\n        });\r\n    };\r\n\r\n                // // //STM - showThanksModal\r\n    function showThanksModal(message) {        // // Открытие окна благодарности\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide');\r\n        openModal('.modal', modalTimerId);                            // // Когда срабатывает функция STM, в ней срабатывает openModal()\r\n\r\n        const thanksModal = document.createElement('div'); // Создаем новый элемент для оповещ\r\n        thanksModal.classList.add('modal__dialog'); // // Формируем верстку оповищ, сообщ юзеру берем из obj выше\r\n        thanksModal.style.marginTop = '25%';\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n\r\n        document.querySelector('.modal').append(thanksModal); // // appendim новый элемент в блок модального окна\r\n        setTimeout(()=> {\r\n            thanksModal.remove();               // // Удаление блока через 4 сек после показа сообщ\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');\r\n        }, 4000);\r\n    };\r\n}\r\n\r\nexport default forms;","function closeModal(modalSelector) {                        // Функция отвечающая за закрытие модального окна\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.remove('show');                         // убираем класс видимости\r\n    modal.classList.add('hide');                            // добавляем класс скрытия\r\n    document.body.style.overflow = '';\r\n};\r\n\r\nfunction openModal(modalSelector, modalTimerId) {                         // Функция отвечающая за открытие модального окна\r\n    const modal = document.querySelector(modalSelector);\r\n    \r\n    modal.classList.add('show');                            // Добавляем класс видимости\r\n    modal.classList.remove('hide');                         // Убираем класс скрытия\r\n    document.body.style.overflow = 'hidden';                // Убираем прокрутку при открытом модальном окне с помошью стилей\r\n    \r\n    console.log(modalTimerId);\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId);\r\n    }\r\n};\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n    //Modal\r\n    const modalTrigger = document.querySelectorAll(triggerSelector);\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modalTrigger.forEach(btn => {                       // Перебор псевдомассива для навешивания обр.соб отвечающая за откр модалки\r\n        btn.addEventListener('click', ()=> openModal(modalSelector, modalTimerId));\r\n    });\r\n\r\n    modal.addEventListener('click', (e)=> {              // Закрываем модалку при нажатии на подложку\r\n        if (e.target === modal || e.target.getAttribute('data-close') === '') {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keydown', (e)=> {                                // Событие отлавливает нажатие кнопки\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {          // code - отслеживает код нажатой кнопки\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    function showModalByScroll() {          // Функция которая открывает модалку при скроле в низ страницы\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight -1) {\r\n            openModal(modalSelector, modalTimerId);\r\n            window.removeEventListener('scroll', showModalByScroll);       // Удаляем обработчик после использования\r\n        };\r\n    };\r\n\r\n    window.addEventListener('scroll', showModalByScroll);         // Событие с функицей выше\r\n}\r\n\r\nexport default modal;\r\nexport {closeModal};\r\nexport {openModal};\r\n","import { getResource } from \"./services/services\";\r\n\r\nfunction menuCards() {\r\n    /////////// Cards\r\n\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {   ///////Класс для карточек\r\n            this.src = src;                                             //свойства класса\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;        // // Метод конвертирующий грн в юсд\r\n\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');                      // // Создаем родителя карточек\r\n            \r\n            if (this.classes.length === 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));    // назначаем класс всем каточкам\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Ціна:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);                       // // аппендим родителя\r\n        }\r\n    }\r\n    \r\n    // getResource('http://localhost:3001/menu') // // постинг карточек на страницу из db.json\r\n    // .then(data=> {                             // //обрабатываем промис и устанавливаем параметры при помощи деструктур.\r\n    //     data.forEach(({img, altimg, title, descr, price}) => {  // перебираем арр с карточками, констр срабатывает столько раз сколько карточек\r\n    //         new MenuCard(img, altimg, title, descr, price, '.menu .container').render();// используем конструктор написаный ранее для рендера на страницу\r\n    //     });                        \r\n    // });\r\n\r\n    axios.get('http://localhost:3001/menu')     // ссылка с которой мы получаем данные\r\n    .then(data=> {                             // //обрабатываем промис и устанавливаем параметры при помощи деструктур.\r\n        data.data.forEach(({img, altimg, title, descr, price}) => {                   // // перебираем арр с карточками\r\n            new MenuCard(img, altimg, title, descr, price, '.menu .container').render();// используем конструктор написаный ранее для рендера на страницу\r\n        });                        \r\n    });\r\n}\r\n\r\nexport default menuCards;","const postData = async (url, data)=> {    // func настраивает наш запрос, посылает его на сервер\r\n    const res = await fetch(url, {       // async await для того что бы асинхкод отработал правильно\r\n        method: 'POST',                 //ответ от сервера приходит асинхронно\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n\r\n    return await res.json();      // //получает ответ от сервера и трансфит его в json\r\n};\r\n\r\nconst getResource = async (url)=> {    // // Получение карточек с сервера\r\n    const res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch${url}, status: ${res.status}`); // // покажет ошибку и статус\r\n    }\r\n\r\n    return await res.json();      // //получает ответ от сервера и транфит его в json\r\n};\r\n\r\nexport {postData, getResource};","function slider({container, slide, nexArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n        // // // Slider сложный вариант\r\n\r\n        const slides = document.querySelectorAll(slide);\r\n        const slider = document.querySelector(container);\r\n        const prev = document.querySelector(prevArrow);\r\n        const next = document.querySelector(nexArrow);\r\n        const total = document.querySelector(totalCounter);\r\n        const current = document.querySelector(currentCounter);\r\n        const slidesWrapper = document.querySelector(wrapper);\r\n        const slidesField = document.querySelector(field);\r\n        const width = window.getComputedStyle(slidesWrapper).width;\r\n    \r\n        let slideIndex = 1;                            // //текущее положение в слайдере\r\n        let offset = 0;\r\n    \r\n        if (slides.length < 10) {\r\n            total.textContent = `0${slides.length}`; // // если номер слайда меньше 10, перед цифрой добавляем 0\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            total.textContent = slides.length;      // //если 10 или больше, 0 не добавляем\r\n            current.textContent = slideIndex;\r\n        }\r\n    \r\n        \r\n        function slidesCurrent() {\r\n            if (slides.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            } else {\r\n                current.textContent = slideIndex;\r\n            }\r\n        };\r\n    \r\n        const deleteTwoLastSymbols = /\\D/g;\r\n    \r\n        slidesField.style.width = 100 * slides.length + '%';\r\n        slidesField.style.display = 'flex';\r\n        slidesField.style.transition = '0.5s all';\r\n    \r\n        slidesWrapper.style.overflow = 'hidden';\r\n    \r\n        slides.forEach(slide => {\r\n            slide.style.width = width;\r\n        });\r\n    \r\n        slider.style.position = 'relative';\r\n    \r\n        const indicators = document.createElement('ol');\r\n        const dots = [];\r\n    \r\n        indicators.classList.add('carousel-indicators');\r\n        indicators.style.cssText = `\r\n            position: absolute;\r\n            right: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            z-index: 15;\r\n            display: flex;\r\n            justify-content: center;\r\n            margin-right: 15%;\r\n            margin-left: 15%;\r\n            list-style: none;\r\n        `;\r\n        slider.append(indicators);\r\n    \r\n        for (let i = 0; i < slides.length; i++) {\r\n            const dot = document.createElement('li');\r\n            dot.setAttribute('data-slide-to', i + 1);\r\n            dot.style.cssText = `\r\n                box-sizing: content-box;\r\n                flex: 0 1 auto;\r\n                width: 30px;\r\n                height: 6px;\r\n                margin-right: 3px;\r\n                margin-left: 3px;\r\n                cursor: pointer;\r\n                background-color: #fff;\r\n                background-clip: padding-box;\r\n                border-top: 10px solid transparent;\r\n                border-bottom: 10px solid transparent;\r\n                opacity: .5;\r\n                transition: opacity .6s ease;\r\n            `;\r\n    \r\n            if (i == 0) {\r\n                dot.style.opacity = 1;\r\n            }\r\n    \r\n            indicators.append(dot);\r\n            dots.push(dot);\r\n        };\r\n    \r\n        function dotsOpasity() {\r\n            dots.forEach(dot => dot.style.opacity = '.5');\r\n            dots[slideIndex - 1].style.opacity = 1;\r\n        };\r\n        \r\n        next.addEventListener('click', ()=> {\r\n            if(offset == +width.replace(deleteTwoLastSymbols, '') * (slides.length - 1)) {\r\n                offset = 0;\r\n            } else {\r\n                offset += +width.replace(deleteTwoLastSymbols, '');\r\n            }\r\n    \r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n    \r\n            if (slideIndex == slides.length) {\r\n                slideIndex = 1;\r\n            } else {\r\n                slideIndex++;\r\n            }\r\n    \r\n            slidesCurrent();\r\n            dotsOpasity();\r\n        });\r\n    \r\n        prev.addEventListener('click', ()=> {\r\n            if(offset == 0) {\r\n                offset = + width.replace(deleteTwoLastSymbols, '') * (slides.length - 1);\r\n            } else {\r\n                offset -= +width.replace(deleteTwoLastSymbols, '');\r\n            }\r\n    \r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n    \r\n            if (slideIndex == 1) {\r\n                slideIndex = slides.length;\r\n            } else {\r\n                slideIndex--;\r\n            }\r\n    \r\n            slidesCurrent();\r\n            dotsOpasity();\r\n        });\r\n    \r\n        dots.forEach(dot => {\r\n            dot.addEventListener('click', (e)=> {\r\n                const slideTo = e.target.getAttribute('data-slide-to');\r\n    \r\n                slideIndex = slideTo;\r\n                offset = +width.replace(deleteTwoLastSymbols, '') * (slideTo - 1);\r\n    \r\n                slidesField.style.transform = `translateX(-${offset}px)`;\r\n    \r\n                slidesCurrent();\r\n                dotsOpasity();\r\n            });\r\n        })\r\n    \r\n        // // // Более простой вариант слайдера\r\n    \r\n        // showSlides(slideIndex);         // // вызов функции с изначальной позицией в слайдере\r\n    \r\n        // if (slides.length < 10) {\r\n        //     total.textContent = `0${slides.length}`; // // если номер слайда меньше 10, перед цифрой добавляем 0\r\n        // } else {\r\n        //     total.textContent = slides.length;      // //если 10 или больше, 0 не добавляем \r\n        // }\r\n    \r\n        // function showSlides(n) {            // n - это slideIndex\r\n        //     if (n > slides.length) {        // //если значение больше чем у нас в слайдере, устанавливаем то \r\n        //         slideIndex = 1;             //slideIndex = 1 (то есть возвращаемся на первый слайд)\r\n        //     }\r\n    \r\n        //     if (n < 1) {                    // // обратная операция(если n < 1 то мы устанавливаем слайдер на последнюю позицию)\r\n        //         slideIndex = slides.length;\r\n        //     }\r\n    \r\n        //     slides.forEach(item => item.style.display = 'none'); // Скрываем все слайды с помошью стилей. предварительно перебрав\r\n    \r\n        //     slides[slideIndex - 1].style.display = 'block'; // показываем нужный слайд (-1 изза того что slides это arr)\r\n    \r\n        //     if (slides.length < 10) {\r\n        //         current.textContent = `0${slideIndex}`; // // добавляем 0 к активному слайду\r\n        //     } else {\r\n        //         slideIndex.textContent = slideIndex;     \r\n        //     }\r\n        // };\r\n    \r\n        // function plusSlides(n) {   // // изменяет наш slideIndex. когда листаем вперед увеличиваем на 1, когда назад, уменьшаем\r\n        //     showSlides(slideIndex += n);\r\n        // };\r\n    \r\n        // prev.addEventListener('click', ()=> {\r\n        //     plusSlides(-1); // // когда нажимаем на prev - передаем -1\r\n        // });\r\n    \r\n        // next.addEventListener('click', ()=> {\r\n        //     plusSlides(1); // // когда нажимаем на prev - передаем +1\r\n        // }); \r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n    // Tabs\r\n\r\n    const tabs = document.querySelectorAll(tabsSelector);\r\n    const tabsContent = document.querySelectorAll(tabsContentSelector);\r\n    const tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n    function hideTabContent() {          /////// функция скрывающая табы\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activeClass);    ///////// удаляем класс active у таба\r\n        });\r\n    };\r\n\r\n    function showTabContent(i = 0) {          ////// функция отображающая табы. Аргумент i отвечает непосредственно за номер таба\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', (e)=> {     //// Делегирование событий, навешиваем обработчик на родителя табов\r\n        const target = e.target;                     //// для удобства создаем переменную \r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {  \r\n            tabs.forEach((item, i)=> {       // C помошью forEach перебераем эл.ты внутри псевдоАRR,  \r\n                if (target == item) {        // если target совпадает с перебераемым эл.том то мы его показываем функциями.\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer(id, deadLine) {\r\n    //Timer\r\n\r\n    function getTimeRemaining(endTime) {\r\n        let days, hours, minutes, seconds;\r\n        const t = Date.parse(endTime) - Date.parse(new Date());\r\n\r\n        if (t <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n            hours = Math.floor((t / (1000 * 60 * 60) % 24));\r\n            minutes = Math.floor((t / 1000 /  60) % 60);\r\n            seconds = Math.floor((t / 1000) % 60);\r\n        }\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    };\r\n\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endTime) {\r\n        const timer = document.querySelector(selector);\r\n        const days = timer.querySelector('#days');\r\n        const hours = timer.querySelector('#hours');\r\n        const minutes = timer.querySelector('#minutes');\r\n        const seconds = timer.querySelector('#seconds');\r\n        const timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock();\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endTime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        };\r\n    };\r\n\r\n    setClock(id, deadLine);\r\n}\r\n\r\nexport default timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport { openModal, closeModal } from './modules/modal';\r\nimport menuCards from './modules/munuCards';\r\nimport timer from './modules/timer';\r\nimport forms from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport calc from './modules/calc';\r\n\r\nwindow.addEventListener('DOMContentLoaded', ()=> {\r\n\r\n    const modalTimerId = setTimeout(()=> openModal('.modal', modalTimerId), 300000);\r\n\r\n        tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n        modal('[data-modal]', '.modal', modalTimerId);\r\n        menuCards();\r\n        timer('.timer', '2027-02-31');\r\n        forms('form', modalTimerId);\r\n        slider({\r\n            container: '.offer__slider',\r\n            nexArrow: '.offer__slider-next',\r\n            prevArrow: '.offer__slider-prev',\r\n            slide: '.offer__slide',\r\n            totalCounter: '#total',\r\n            currentCounter: '#current',\r\n            wrapper: '.offer__slider-wrapper',\r\n            field: '.offer__slider-inner'\r\n        });\r\n        calc();\r\n\r\n    //     // Tabs\r\n\r\n    // const tabs = document.querySelectorAll('.tabheader__item');\r\n    // const tabsContent = document.querySelectorAll('.tabcontent');\r\n    // const tabsParent = document.querySelector('.tabheader__items');\r\n\r\n    // function hideTabContent() {          /////// функция скрывающая табы\r\n    //     tabsContent.forEach(item => {\r\n    //         item.classList.add('hide');\r\n    //         item.classList.remove('show', 'fade');\r\n    //     });\r\n\r\n    //     tabs.forEach(item => {\r\n    //         item.classList.remove('tabheader__item_active');    ///////// удаляем класс active у таба\r\n    //     });\r\n    // };\r\n\r\n    // function showTabContent(i = 0) {          ////// функция отображающая табы. Аргумент i отвечает непосредственно за номер таба\r\n    //     tabsContent[i].classList.add('show', 'fade');\r\n    //     tabsContent[i].classList.remove('hide');\r\n    //     tabs[i].classList.add('tabheader__item_active');\r\n    // }\r\n\r\n    // hideTabContent();\r\n    // showTabContent();\r\n\r\n    // tabsParent.addEventListener('click', (e)=> {     //// Делегирование событий, навешиваем обработчик на родителя табов\r\n    //     const target = e.target;                     //// для удобства создаем переменную \r\n\r\n    //     if (target && target.classList.contains('tabheader__item')) {  \r\n    //         tabs.forEach((item, i)=> {       // C помошью forEach перебераем эл.ты внутри псевдоАRR,  \r\n    //             if (target == item) {        // если target совпадает с перебераемым эл.том то мы его показываем функциями.\r\n    //                 hideTabContent();\r\n    //                 showTabContent(i);\r\n    //             }\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // //Timer\r\n\r\n    // const deadLine = '2025-04-23';\r\n\r\n    // function getTimeRemaining(endTime) {\r\n    //     let days, hours, minutes, seconds;\r\n    //     const t = Date.parse(endTime) - Date.parse(new Date());\r\n\r\n    //     if (t <= 0) {\r\n    //         days = 0;\r\n    //         hours = 0;\r\n    //         minutes = 0;\r\n    //         seconds = 0;\r\n    //     } else {\r\n    //         days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n    //         hours = Math.floor((t / (1000 * 60 * 60) % 24));\r\n    //         minutes = Math.floor((t / 1000 /  60) % 60);\r\n    //         seconds = Math.floor((t / 1000) % 60);\r\n    //     }\r\n\r\n    //     return {\r\n    //         'total': t,\r\n    //         'days': days,\r\n    //         'hours': hours,\r\n    //         'minutes': minutes,\r\n    //         'seconds': seconds\r\n    //     };\r\n    // };\r\n\r\n    // function getZero(num) {\r\n    //     if (num >= 0 && num < 10) {\r\n    //         return `0${num}`;\r\n    //     } else {\r\n    //         return num;\r\n    //     }\r\n    // }\r\n\r\n    // function setClock(selector, endTime) {\r\n    //     const timer = document.querySelector(selector);\r\n    //     const days = timer.querySelector('#days');\r\n    //     const hours = timer.querySelector('#hours');\r\n    //     const minutes = timer.querySelector('#minutes');\r\n    //     const seconds = timer.querySelector('#seconds');\r\n    //     const timeInterval = setInterval(updateClock, 1000);\r\n\r\n    //     updateClock();\r\n\r\n    //     function updateClock() {\r\n    //         const t = getTimeRemaining(endTime);\r\n\r\n    //         days.innerHTML = getZero(t.days);\r\n    //         hours.innerHTML = getZero(t.hours);\r\n    //         minutes.innerHTML = getZero(t.minutes);\r\n    //         seconds.innerHTML = getZero(t.seconds);\r\n\r\n    //         if (t.total <= 0) {\r\n    //             clearInterval(timeInterval);\r\n    //         }\r\n    //     };\r\n    // };\r\n\r\n    // setClock('.timer', deadLine);\r\n\r\n    // //Modal\r\n\r\n    // const modalTrigger = document.querySelectorAll('[data-modal]');\r\n    // const modal = document.querySelector('.modal');\r\n\r\n    // function openModal() {                              // Функция отвечающая за открытие модального окна\r\n    //     modal.classList.add('show');                    // Добавляем класс видимости\r\n    //     modal.classList.remove('hide');                 // Убираем класс скрытия\r\n    //     document.body.style.overflow = 'hidden';        // Убираем прокрутку при открытом модальном окне с помошью стилей\r\n    //     clearInterval(modalTimerID);\r\n    // };\r\n\r\n    // modalTrigger.forEach(btn => {                       // Перебор псевдомассива для навешивания обр.соб отвечающая за откр модалки\r\n    //     btn.addEventListener('click', ()=> {\r\n    //         openModal();\r\n    //     });\r\n    // });\r\n\r\n    // function closeModal() {                              // Функция отвечающая за закрытие модального окна\r\n    //     modal.classList.remove('show');                  // убираем класс видимости\r\n    //     modal.classList.add('hide');                     // добавляем класс скрытия\r\n    //     document.body.style.overflow = '';\r\n    // };\r\n\r\n    // modal.addEventListener('click', (e)=> {              // Закрываем модалку при нажатии на подложку\r\n    //     if (e.target === modal || e.target.getAttribute('data-close') === '') {\r\n    //         closeModal();\r\n    //     }\r\n    // });\r\n\r\n    // document.addEventListener('keydown', (e)=> {                                // Событие отлавливает нажатие кнопки\r\n    //     if (e.code === 'Escape' && modal.classList.contains('show')) {          // code - отслеживает код нажатой кнопки\r\n    //         closeModal();\r\n    //     }\r\n    // });\r\n\r\n    // const modalTimerID = setTimeout(openModal, 300000);\r\n\r\n    // function showModalByScroll() {          // Функция которая открывает модалку при скроле в низ страницы\r\n    //     if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight -1) {\r\n    //         openModal();\r\n    //         window.removeEventListener('scroll', showModalByScroll);       // Удаляем обработчик после использования\r\n    //     };\r\n    // };\r\n\r\n    // window.addEventListener('scroll', showModalByScroll);         // Событие с функицей выше\r\n\r\n    // /////////// Cards\r\n\r\n    // class MenuCard {\r\n    //     constructor(src, alt, title, descr, price, parentSelector, ...classes) {   ///////Класс для карточек\r\n    //         this.src = src;                                             //свойства класса\r\n    //         this.alt = alt;\r\n    //         this.title = title;\r\n    //         this.descr = descr;\r\n    //         this.price = price;\r\n    //         this.classes = classes;\r\n    //         this.parent = document.querySelector(parentSelector);\r\n    //         this.transfer = 27;\r\n    //         this.changeToUAH();\r\n    //     }\r\n\r\n    //     changeToUAH() {\r\n    //         this.price = this.price * this.transfer;        // // Метод конвертирующий грн в юсд\r\n\r\n    //     }\r\n\r\n    //     render() {\r\n    //         const element = document.createElement('div');                      // // Создаем родителя карточек\r\n            \r\n    //         if (this.classes.length === 0) {\r\n    //             this.element = 'menu__item';\r\n    //             element.classList.add(this.element);\r\n    //         } else {\r\n    //             this.classes.forEach(className => element.classList.add(className));    // назначаем класс всем каточкам\r\n    //         }\r\n\r\n    //         element.innerHTML = `\r\n    //             <img src=${this.src} alt=${this.alt}>\r\n    //             <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n    //             <div class=\"menu__item-descr\">${this.descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //             <div class=\"menu__item-price\">\r\n    //                 <div class=\"menu__item-cost\">Ціна:</div>\r\n    //                 <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n    //             </div>\r\n    //         `;\r\n    //         this.parent.append(element);                       // // аппендим родителя\r\n    //     }\r\n    // }\r\n\r\n    // const getResource = async (url)=> {    // // Получение карточек с сервера\r\n    //     const res = await fetch(url);\r\n\r\n    //     if (!res.ok) {\r\n    //         throw new Error(`Could not fetch${url}, status: ${res.status}`); // // покажет ошибку и статус\r\n    //     }\r\n\r\n    //     return await res.json();      // //получает ответ от сервера и транфит его в json\r\n    // };\r\n\r\n    // // getResource('http://localhost:3001/menu') // // постинг карточек на страницу из db.json\r\n    // // .then(data=> {                             // //обрабатываем промис и устанавливаем параметры при помощи деструктур.\r\n    // //     data.forEach(({img, altimg, title, descr, price}) => {  // перебираем арр с карточками, констр срабатывает столько раз сколько карточек\r\n    // //         new MenuCard(img, altimg, title, descr, price, '.menu .container').render();// используем конструктор написаный ранее для рендера на страницу\r\n    // //     });                        \r\n    // // });\r\n\r\n    // axios.get('http://localhost:3001/menu')     // ссылка с которой мы получаем данные\r\n    // .then(data=> {                             // //обрабатываем промис и устанавливаем параметры при помощи деструктур.\r\n    //     data.data.forEach(({img, altimg, title, descr, price}) => {                   // // перебираем арр с карточками\r\n    //         new MenuCard(img, altimg, title, descr, price, '.menu .container').render();// используем конструктор написаный ранее для рендера на страницу\r\n    //     });                        \r\n    // });\r\n\r\n    // // Forms\r\n\r\n    // const forms = document.querySelectorAll('form');\r\n\r\n    // const message = {               // // Сообщение для юзера\r\n    //     loading: 'img/spinner/spinner.svg',      // // Спиннер из папки img. Нужно просто указать путь и использовать изобр.\r\n    //     ssucces: 'Thank you!',\r\n    //     failure: 'Error!'\r\n    // };\r\n\r\n    // const postData = async (url, data)=> {    // func настраивает наш запрос, посылает его на сервер\r\n    //     const res = await fetch(url, {       // async await для того что бы асинхкод отработал правильно\r\n    //         method: 'POST',                 //ответ от сервера приходит асинхронно\r\n    //         headers: {\r\n    //             'Content-type': 'application/json'\r\n    //         },\r\n    //         body: data\r\n    //     });\r\n\r\n    //     return await res.json();      // //получает ответ от сервера и трансфит его в json\r\n    // };\r\n\r\n    // function bindPostData(form) {                           // // Функция по отправке данніх\r\n    //     form.addEventListener('submit', (e)=> {\r\n    //         e.preventDefault();\r\n\r\n    //         const statusMessage = document.createElement('img');  // // Cоздание єлемента на странице для помещения сообщения юзеру\r\n    //         statusMessage.src = message.loading;    // // Помещаем спиннер на стрнцу\r\n    //         statusMessage.style.cssText = `         \r\n    //             display: block;\r\n    //             margin: 0 auto;\r\n    //         `;                              // // центруем спиннер стилями\r\n    //         form.append(statusMessage);\r\n    //         form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n    //         const formData = new FormData(form);        // // Создание объекта formData\r\n\r\n    //         const json = JSON.stringify(Object.fromEntries(formData.entries())); //превращаем formData в арр с аррами,\r\n    //                                                                               // //после в obj, а после в json\r\n    //         // // FETCH\r\n    //         // // Создание запроса на сервер с помощью func postData внутри которой fetch возвращающий promise\r\n    //         postData('http://localhost:3001/requests', json)        // // обрабатываем ответ с помошью then и catch\r\n    //         .then(data => {                                             // // data - это полученные данные от сервера\r\n    //             console.log(data);\r\n    //             showThanksModal(message.ssucces);\r\n    //             statusMessage.remove();             // Удаление соббщения для юзера\r\n    //         })\r\n    //         .catch(()=> {\r\n    //             showThanksModal(message.failure);       // ввывод ошибки при срабатывании reject\r\n    //         })\r\n    //         .finally(()=> {\r\n    //             form.reset();                    // Сброс формы после успешной отправки данных\r\n    //         })\r\n    //     });\r\n    // };\r\n    \r\n    // forms.forEach(form => {             // //запуск функции(item это форма)\r\n    //     bindPostData(form);\r\n    // });\r\n\r\n    //             // // //STM - showThanksModal\r\n    // function showThanksModal(message) {        // // Открытие окна благодарности\r\n    //     const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n    //     prevModalDialog.classList.add('hide');\r\n    //     openModal();                            // // Когда срабатывает функция STM, в ней срабатывает openModal()\r\n\r\n    //     const thanksModal = document.createElement('div'); // Создаем новый элемент для оповещ\r\n    //     thanksModal.classList.add('modal__dialog'); // // Формируем верстку оповищ, сообщ юзеру берем из obj выше\r\n    //     thanksModal.style.marginTop = '25%';\r\n    //     thanksModal.innerHTML = `\r\n    //         <div class=\"modal__content\">\r\n    //             <div class=\"modal__close\" data-close>×</div>\r\n    //             <div class=\"modal__title\">${message}</div>\r\n    //         </div>\r\n    //     `;\r\n\r\n    //     document.querySelector('.modal').append(thanksModal); // // appendim новый элемент в блок модального окна\r\n    //     setTimeout(()=> {\r\n    //         thanksModal.remove();               // // Удаление блока через 4 сек после показа сообщ\r\n    //         prevModalDialog.classList.add('show');\r\n    //         prevModalDialog.classList.remove('hide');\r\n    //         closeModal();\r\n    //     }, 4000);\r\n    // };\r\n\r\n    // // // // Slider сложный вариант\r\n\r\n    // const slides = document.querySelectorAll('.offer__slide');\r\n    // const slider = document.querySelector('.offer__slider');\r\n    // const prev = document.querySelector('.offer__slider-prev');\r\n    // const next = document.querySelector('.offer__slider-next');\r\n    // const total = document.querySelector('#total');\r\n    // const current = document.querySelector('#current');\r\n    // const slidesWrapper = document.querySelector('.offer__slider-wrapper');\r\n    // const slidesField = document.querySelector('.offer__slider-inner');\r\n    // const width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    // let slideIndex = 1;                            // //текущее положение в слайдере\r\n    // let offset = 0;\r\n\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`; // // если номер слайда меньше 10, перед цифрой добавляем 0\r\n    //     current.textContent = `0${slideIndex}`;\r\n    // } else {\r\n    //     total.textContent = slides.length;      // //если 10 или больше, 0 не добавляем\r\n    //     current.textContent = slideIndex;\r\n    // }\r\n\r\n    \r\n    // function slidesCurrent() {\r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else {\r\n    //         current.textContent = slideIndex;\r\n    //     }\r\n    // };\r\n\r\n    // const deleteTwoLastSymbols = /\\D/g;\r\n\r\n    // slidesField.style.width = 100 * slides.length + '%';\r\n    // slidesField.style.display = 'flex';\r\n    // slidesField.style.transition = '0.5s all';\r\n\r\n    // slidesWrapper.style.overflow = 'hidden';\r\n\r\n    // slides.forEach(slide => {\r\n    //     slide.style.width = width;\r\n    // });\r\n\r\n    // slider.style.position = 'relative';\r\n\r\n    // const indicators = document.createElement('ol');\r\n    // const dots = [];\r\n\r\n    // indicators.classList.add('carousel-indicators');\r\n    // indicators.style.cssText = `\r\n    //     position: absolute;\r\n    //     right: 0;\r\n    //     bottom: 0;\r\n    //     left: 0;\r\n    //     z-index: 15;\r\n    //     display: flex;\r\n    //     justify-content: center;\r\n    //     margin-right: 15%;\r\n    //     margin-left: 15%;\r\n    //     list-style: none;\r\n    // `;\r\n    // slider.append(indicators);\r\n\r\n    // for (let i = 0; i < slides.length; i++) {\r\n    //     const dot = document.createElement('li');\r\n    //     dot.setAttribute('data-slide-to', i + 1);\r\n    //     dot.style.cssText = `\r\n    //         box-sizing: content-box;\r\n    //         flex: 0 1 auto;\r\n    //         width: 30px;\r\n    //         height: 6px;\r\n    //         margin-right: 3px;\r\n    //         margin-left: 3px;\r\n    //         cursor: pointer;\r\n    //         background-color: #fff;\r\n    //         background-clip: padding-box;\r\n    //         border-top: 10px solid transparent;\r\n    //         border-bottom: 10px solid transparent;\r\n    //         opacity: .5;\r\n    //         transition: opacity .6s ease;\r\n    //     `;\r\n\r\n    //     if (i == 0) {\r\n    //         dot.style.opacity = 1;\r\n    //     }\r\n\r\n    //     indicators.append(dot);\r\n    //     dots.push(dot);\r\n    // };\r\n\r\n    // function dotsOpasity() {\r\n    //     dots.forEach(dot => dot.style.opacity = '.5');\r\n    //     dots[slideIndex - 1].style.opacity = 1;\r\n    // };\r\n    \r\n    // next.addEventListener('click', ()=> {\r\n    //     if(offset == +width.replace(deleteTwoLastSymbols, '') * (slides.length - 1)) {\r\n    //         offset = 0;\r\n    //     } else {\r\n    //         offset += +width.replace(deleteTwoLastSymbols, '');\r\n    //     }\r\n\r\n    //     slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n    //     if (slideIndex == slides.length) {\r\n    //         slideIndex = 1;\r\n    //     } else {\r\n    //         slideIndex++;\r\n    //     }\r\n\r\n    //     slidesCurrent();\r\n    //     dotsOpasity();\r\n    // });\r\n\r\n    // prev.addEventListener('click', ()=> {\r\n    //     if(offset == 0) {\r\n    //         offset = + width.replace(deleteTwoLastSymbols, '') * (slides.length - 1);\r\n    //     } else {\r\n    //         offset -= +width.replace(deleteTwoLastSymbols, '');\r\n    //     }\r\n\r\n    //     slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n    //     if (slideIndex == 1) {\r\n    //         slideIndex = slides.length;\r\n    //     } else {\r\n    //         slideIndex--;\r\n    //     }\r\n\r\n    //     slidesCurrent();\r\n    //     dotsOpasity();\r\n    // });\r\n\r\n    // dots.forEach(dot => {\r\n    //     dot.addEventListener('click', (e)=> {\r\n    //         const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n    //         slideIndex = slideTo;\r\n    //         offset = +width.replace(deleteTwoLastSymbols, '') * (slideTo - 1);\r\n\r\n    //         slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n    //         slidesCurrent();\r\n    //         dotsOpasity();\r\n    //     });\r\n    // })\r\n\r\n    // // // // Более простой вариант слайдера\r\n\r\n    // // showSlides(slideIndex);         // // вызов функции с изначальной позицией в слайдере\r\n\r\n    // // if (slides.length < 10) {\r\n    // //     total.textContent = `0${slides.length}`; // // если номер слайда меньше 10, перед цифрой добавляем 0\r\n    // // } else {\r\n    // //     total.textContent = slides.length;      // //если 10 или больше, 0 не добавляем \r\n    // // }\r\n\r\n    // // function showSlides(n) {            // n - это slideIndex\r\n    // //     if (n > slides.length) {        // //если значение больше чем у нас в слайдере, устанавливаем то \r\n    // //         slideIndex = 1;             //slideIndex = 1 (то есть возвращаемся на первый слайд)\r\n    // //     }\r\n\r\n    // //     if (n < 1) {                    // // обратная операция(если n < 1 то мы устанавливаем слайдер на последнюю позицию)\r\n    // //         slideIndex = slides.length;\r\n    // //     }\r\n\r\n    // //     slides.forEach(item => item.style.display = 'none'); // Скрываем все слайды с помошью стилей. предварительно перебрав\r\n\r\n    // //     slides[slideIndex - 1].style.display = 'block'; // показываем нужный слайд (-1 изза того что slides это arr)\r\n\r\n    // //     if (slides.length < 10) {\r\n    // //         current.textContent = `0${slideIndex}`; // // добавляем 0 к активному слайду\r\n    // //     } else {\r\n    // //         slideIndex.textContent = slideIndex;     \r\n    // //     }\r\n    // // };\r\n\r\n    // // function plusSlides(n) {   // // изменяет наш slideIndex. когда листаем вперед увеличиваем на 1, когда назад, уменьшаем\r\n    // //     showSlides(slideIndex += n);\r\n    // // };\r\n\r\n    // // prev.addEventListener('click', ()=> {\r\n    // //     plusSlides(-1); // // когда нажимаем на prev - передаем -1\r\n    // // });\r\n\r\n    // // next.addEventListener('click', ()=> {\r\n    // //     plusSlides(1); // // когда нажимаем на prev - передаем +1\r\n    // // }); \r\n\r\n    // // // // Calc\r\n\r\n    // const result = document.querySelector('.calculating__result span'); // куда помещается результат\r\n\r\n    // let sex, height, weight, age, ratio;\r\n\r\n    // /// /// /// /// /// LocalStorage для запоминания значений(не обязательно)\r\n\r\n    // if (localStorage.getItem('sex')) {\r\n    //     sex = localStorage.getItem('sex');\r\n    // } else {\r\n    //     sex = 'female';\r\n    //     localStorage.setItem('sex', 'female');\r\n    // }\r\n\r\n    // if (localStorage.getItem('ratio')) {\r\n    //     ratio = localStorage.getItem('ratio');\r\n    // } else {\r\n    //     ratio = 1.375;\r\n    //     localStorage.setItem('ratio', 1.375);\r\n    // }\r\n\r\n    // function initLocalSettings(selector, activeClass) {\r\n    //     const elements = document.querySelectorAll(selector);\r\n\r\n    //     elements.forEach(elem => {\r\n    //         elem.classList.remove(activeClass);\r\n\r\n    //         if(elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n    //             elem.classList.add(activeClass);\r\n    //         }\r\n    //         if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n    //             elem.classList.add(activeClass);\r\n    //         }  \r\n    //     });\r\n    // };\r\n\r\n    // initLocalSettings('#gender div' , 'calculating__choose-item_active');\r\n    // initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    // /// /// /// /// ///^^\r\n\r\n    // function calcTotal() {                                  // //func расчёта калорийности\r\n    //     if (!sex || !height || !weight || !age || !ratio) {//если значения false то выведится '---' если тру то сработает формула\r\n    //         result.textContent = '---';\r\n    //         return;                             // // ретерн для досрочного завершения функиции\r\n    //     }\r\n\r\n    //     if (sex === 'female') {           // //  если выбран жен пол то расчёт будет по одной формуле и выведется на страницу\r\n    //         result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n    //     } else {                              // // если мужской то по второй формуле\r\n    //         result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n    //     }\r\n    // };\r\n\r\n    // calcTotal();\r\n\r\n    // function getStaticInform(selector, activeClass) {                 // // получение статической инфы\r\n    //     const elements = document.querySelectorAll(selector);   // //получаем дивы в родителе (дивы указываем при вызове функ)\r\n\r\n    //     elements.forEach(elem => {\r\n    //         elem.addEventListener('click', (e)=> {\r\n    //             if (e.target.getAttribute('data-ratio')) { // // если у элема на котором произ. событие есть аттрибут мы его присваиваем\r\n    //                 ratio = +e.target.getAttribute('data-ratio');   // //  из e.target\r\n    //                 localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n    //             } else {\r\n    //                 sex = e.target.getAttribute('id');\r\n    //                 localStorage.setItem('sex', e.target.getAttribute('id'));\r\n    //             }\r\n    \r\n    //             elements.forEach(elem => {              // // убираем класс актив у дивов которые получали\r\n    //                 elem.classList.remove(activeClass);\r\n    //             });\r\n    \r\n    //             e.target.classList.add(activeClass); // // добавляем тому диву клас на котором произошло событие\r\n    \r\n    //             calcTotal();\r\n    //         });\r\n    //     });\r\n    // };\r\n\r\n    // getStaticInform('#gender div', 'calculating__choose-item_active');// 1арг родитель по id 2арг класс активности\r\n    // getStaticInform('.calculating__choose_big div', 'calculating__choose-item_active');// 1арг родитель 2арг класс активности\r\n\r\n    // function getDynamicInform(selector) {           // // func по работе с инпутами для получения динамич информ\r\n    //     const input = document.querySelector(selector);     // //получаем нужный инпут\r\n\r\n    //     input.addEventListener('input', ()=> { // // обработчик на инпут\r\n\r\n    //         if(input.value.match(/\\D/g)) {      // // проверям регЭкспом на не числа\r\n    //             input.style.border = '2px solid red'; // // Если в value не число подсвечиваем бордер красным\r\n    //         } else {\r\n    //             input.style.border = 'none';\r\n    //         }\r\n\r\n    //         switch(input.getAttribute('id')) { // switch/Case проверяем наши єлем по id. Если совпало то присваеваем input.value\r\n    //             case 'height':                                                                  //то что вписал пользователь\r\n    //                 height = +input.value;\r\n    //                 break;\r\n    //             case 'weight':\r\n    //                 weight = +input.value;\r\n    //                 break;\r\n    //             case 'age':\r\n    //                 age = +input.value;\r\n    //                 break;\r\n    //         }\r\n            \r\n    //         calcTotal();\r\n    //     });\r\n    // };\r\n\r\n    // getDynamicInform('#height');\r\n    // getDynamicInform('#weight');\r\n    // getDynamicInform('#age');\r\n}); "],"names":[],"sourceRoot":""}